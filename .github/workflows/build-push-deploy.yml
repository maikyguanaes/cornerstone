name: Build & Push & Deploy

on:
  push:
    branches:
      - main

env:
  REPOSITORY: cornerstone
  REGISTRY: registry.digitalocean.com/maiky-dev
  K8S_NAME: k8s-maiky-dev
  TARGET: production

jobs:
  check-branch:
    name: Check branch
    runs-on: ubuntu-latest

    outputs:
      sha_short: ${{ env.SHA_SHORT }}
      branch: ${{ env.BRANCH }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Set outputs
        id: vars
        run: echo "SHA_SHORT=`git rev-parse --short HEAD`"  >> $GITHUB_ENV

      - name: Get Branch
        id: branch
        env:
          BRANCH_SYMBOLIC: ${{ contains('refs/heads/main refs/heads/staging', github.ref) }}
        run: |
          if ${BRANCH_SYMBOLIC}; then
            echo "BRANCH=`git symbolic-ref --short HEAD`" >> $GITHUB_ENV
          else
            echo "BRANCH=`git for-each-ref | grep ${{ env.SHA_SHORT }} | grep origin | sed "s/.*\///"`" >> $GITHUB_ENV
          fi

  build-push:
    name: Build and deploy
    runs-on: ubuntu-latest
    needs: check-branch

    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Update SHA
        run: echo $GITHUB_SHA > $GITHUB_WORKSPACE/config/_meta

      - name: Install doctl (Digital Ocean)
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: Login Registry (Digital Ocean)
        id: login-doctl
        run: doctl registry login --expiry-seconds 600

      - name: Get Tags for Image
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}
          tags: |
            type=raw,value=${{ needs.check-branch.outputs.sha_short }},priority=100
            type=raw,value=${{ needs.check-branch.outputs.branch }} 
            type=raw,value=${{ needs.check-branch.outputs.sha_short }},prefix=${{ needs.check-branch.outputs.branch }}-
            type=raw,value=latest,enable=${{ needs.check-branch.outputs.branch == 'main'}}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./config/docker/Dockerfile
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update deploy file
        run: TAG=${{ needs.check-branch.outputs.sha_short }} && sed -i 's|<IMAGE>|'${{env.REGISTRY}}'/'${{env.REPOSITORY}}':'${TAG}'|' ./config/k8s/deployment.yml

      - name: Save Config Cluster
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{env.K8S_NAME}}

      - name: Deploy
        run: kubectl apply -f ./config/k8s/deployment.yml

      - name: Verify deploy
        run: kubectl rollout status deployment/${{env.REPOSITORY}}
